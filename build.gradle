plugins {
    id 'java'
    id 'maven-publish'
    id 'de.gliderpilot.semantic-release' version '1.4.0'
    id 'com.github.blueboxware.tocme' version '1.1'
}

apply from: 'secrets.gradle'
/*
 * This file isn't uploaded to GitHub.
 * At the moment, it just contains the GitHub token for the semantic release plugin,
 * so you should come along very well without it. :)
 */

repositories {
    mavenLocal()
    maven {
        url = 'https://jitpack.io'
    }
    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}


ext {
    springVersion="5.1.6.RELEASE"
    junitVersion="5.4.2"
}

dependencies {
    compile group: 'org.springframework', name: 'spring-context', version: "${springVersion}"
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "${junitVersion}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"

    //Really no idea what the cause is, but the handlebars-related stuff from com.github.jknack won't be found,
    //so it's excluded - does not make any problems!
    testCompile ("com.github.tomakehurst:wiremock-jre8:2.23.2") {
        exclude group: "com.github.jknack", module: '*'
    }
    testCompile ("com.github.JensPiegsa:wiremock-extension:0.4.0") {
        exclude group: "com.github.jknack", module: '*'
    }
    testCompile 'org.apache.commons:commons-text:1.6'
    testRuntime 'org.opentest4j:opentest4j:1.0.0-M1'

    compile 'org.springframework.hateoas:spring-hateoas:0.25.1.RELEASE'
    compile 'org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    compile 'com.fasterxml.jackson.core:jackson-core:2.9.8'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.9.8'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.8'
    compile 'org.apache.commons:commons-lang3:3.9'
    runtime group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.2'

}

group = 'com.github.ahuemmer'
sourceCompatibility = '11'

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}

javadoc {
    options.encoding = 'UTF-8'
    options.charSet = 'UTF-8'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

semanticRelease {
    repo {
        ghToken = project.ghToken
        releaseAsset jar, label: 'JAR file', contentType: 'application/zip'
        releaseAsset sourcesJar, label: 'JAR file including sources', contentType: 'application/zip'
        releaseAsset javadocJar, label: 'JAR file including javadoc', contentType: 'application/zip'
    }
}

tocme {
    doc(file('README.md'))
}

tasks.release.dependsOn checkTocs