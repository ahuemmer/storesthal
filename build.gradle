plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.blueboxware.tocme' version '1.3'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

/*
 * This file isn't uploaded to GitHub.
 * At the moment, it just contains the GitHub token for the semantic release plugin,
 * so you should come along very well without it. :)
 */
if (file('secrets.gradle').exists()) {
    apply from: 'secrets.gradle'
}
else {
    //Possibly we're using GitHub Actions, where the token is set automatically:
    ext.ghToken = "$System.env.GITHUB_TOKEN"
    ext.ghActor = "$System.env.GITHUB_ACTOR"
}


group='com.github.ahuemmer'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = 'https://jitpack.io'
    }
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
    maven {
        url = 'https://maven.pkg.github.com/ahuemmer/storesthal'
        credentials {
            username = project.ghActor
            password = project.ghToken
        }
    }
}

ext {
    springBootVersion = '3.4.4'

    junitVersion = '5.6.2'
    wiremockVersion = '3.12.1'
    commonsTextVersion = '1.9'
    openTestVersion = '1.2.0'
    springHateoasVersion = '2.4.1'
    log4jSlf4jImplVersion = '2.14.1'
}

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json', version: springBootVersion
    implementation group: 'org.springframework.hateoas', name: 'spring-hateoas', version: '2.4.1'
    implementation group: 'org.apache.commons', name:'commons-lang3', version: '3.17.0'

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion
    testImplementation group: 'org.apache.commons', name: 'commons-text', version: '1.13.0'

    // 2025-04-05: 3.9.0 is out, versions >3.7.0 lead to errors. :(
    testImplementation group: 'org.wiremock.integrations', name: 'wiremock-spring-boot', version: '3.7.0'
}


test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}

javadoc {
    options.encoding = 'UTF-8'
    options.charSet = 'UTF-8'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

def pomConfig = {
    scm {
        url 'https://github.com/ahuemmer/storesthal'
    }
    distributionManagement {
        repository {
            id 'github'
            name 'Storesthal Apache Maven Packages'
            url 'https://maven.pkg.github.com/ahuemmer/storesthal'
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                asNode().children().last() + pomConfig
            }
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/ahuemmer/storesthal"
            credentials {
                username = project.ghActor
                password = project.ghToken
            }
        }
    }
}

tocme {
    doc(file('README.md'))
}

tasks.publish.dependsOn checkTocs