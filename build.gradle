plugins {
    id 'java'
    id 'maven-publish'
    id 'de.gliderpilot.semantic-release' version '1.4.0'
    id 'com.github.blueboxware.tocme' version '1.1'
}

apply from: 'secrets.gradle'
/*
 * This file isn't uploaded to GitHub.
 * At the moment, it just contains the GitHub token for the semantic release plugin,
 * so you should come along very well without it. :)
 */

group='com.github.ahuemmer'

repositories {
    mavenLocal()
    jcenter()
    maven {
        url = 'https://jitpack.io'
    }
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
}

ext {
    springVersion = '5.2.8.RELEASE'
    junitVersion = '5.6.2'
    wiremockVersion = '2.27.1'
    wiremockExtensionVersion = '0.4.0'
    springCorePluginVersion = '2.0.0.RELEASE'
    jacksonVersion = '2.11.1'
    commonsLang3Version = '3.11'
    commonsTextVersion = '1.9'
    log4JVersion = '2.13.3'
    openTestVersion = '1.2.0'
    springHateoasVersion = '1.1.1.RELEASE'
}

dependencies {
    compile group: 'org.springframework', name: 'spring-context', version: "${springVersion}"
    compile group: 'org.springframework.hateoas', name: 'spring-hateoas', version: "${springHateoasVersion}"
    compile group: 'org.springframework.plugin', name: 'spring-plugin-core', version: "${springCorePluginVersion}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonVersion}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "${jacksonVersion}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "${jacksonVersion}"
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: "${jacksonVersion}"
    compile group: 'org.apache.commons', name:'commons-lang3', version: "${commonsLang3Version}"

    runtime group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: "${log4JVersion}"

    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "${junitVersion}"
    testCompile group: 'com.github.tomakehurst', name: 'wiremock', version: "${wiremockVersion}"
    testCompile group: 'com.github.JensPiegsa', name: 'wiremock-extension', version: "${wiremockExtensionVersion}"
    testCompile group: 'org.apache.commons', name: 'commons-text', version: "${commonsTextVersion}"

    testRuntime group: 'org.opentest4j', name:'opentest4j', version: "${openTestVersion}"
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "${junitVersion}"
}


test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}

javadoc {
    options.encoding = 'UTF-8'
    options.charSet = 'UTF-8'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

semanticRelease {
    repo {
        ghToken = project.ghToken
        releaseAsset jar, label: 'JAR file', contentType: 'application/zip'
        releaseAsset sourcesJar, label: 'JAR file including sources', contentType: 'application/zip'
        releaseAsset javadocJar, label: 'JAR file including javadoc', contentType: 'application/zip'
    }
}

tocme {
    doc(file('README.md'))
}

tasks.release.dependsOn checkTocs